// Generated by Lezer from the SDL grammar
import * as TokenTypeId from "../../lezer/parser.terms.ts";

export const alignedModifierRules = [
  {
    previous: TokenTypeId.OpenParenthesis,
    expected: [
      TokenTypeId.AlignmentBitCount8,
      TokenTypeId.AlignmentBitCount16,
      TokenTypeId.AlignmentBitCount32,
      TokenTypeId.AlignmentBitCount64,
      TokenTypeId.AlignmentBitCount128,
    ],
  },
  {
    previous: TokenTypeId.AlignmentBitCount8,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.AlignmentBitCount16,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.AlignmentBitCount32,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.AlignmentBitCount64,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.AlignmentBitCount128,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.AlignmentBitCount8,
    expected: TokenTypeId.CloseParenthesis,
  },
];
