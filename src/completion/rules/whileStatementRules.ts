// Generated by Lezer from the SDL grammar
import * as TokenTypeId from "../../lezer/parser.terms.ts";
import { expressionTypes } from "./abstractTypes.ts";

export const whileStatementRules = [
  {
    previous: [TokenTypeId._while],
    expected: [TokenTypeId.OpenParenthesis],
  },
  {
    previous: [TokenTypeId.OpenParenthesis],
    expected: expressionTypes,
  },
  {
    previous: TokenTypeId.UnaryExpression,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.BinaryExpression,
    expected: TokenTypeId.CloseParenthesis,
  },
  {
    previous: TokenTypeId.CloseParenthesis,
    expected: TokenTypeId.CompoundStatement,
  },
];
