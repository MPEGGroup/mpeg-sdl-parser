import { NodeProp, NodeType } from "@lezer/common";

// Generated by Lezer from the SDL grammar
import * as TokenTypeId from "../parser.terms.ts";

export const primitiveNodeProp = new NodeProp<boolean>();
export const primitiveNodePropSource = primitiveNodeProp.add(
  (type: NodeType) => {
    return type.id === TokenTypeId.BinaryLiteral ||
        type.id === TokenTypeId.DecimalLiteral ||
        type.id === TokenTypeId.FloatingPointLiteral ||
        type.id === TokenTypeId.HexadecimalLiteral ||
        type.id === TokenTypeId.Identifier ||
        type.id === TokenTypeId.IntegerLiteral
      ? true
      : undefined;
  },
);
